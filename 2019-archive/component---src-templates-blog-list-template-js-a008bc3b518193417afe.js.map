{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_string-ws.js","webpack:///./src/components/PostList.js","webpack:///./src/templates/blogListTemplate.js","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js"],"names":["module","exports","PostList","props","posts","map","node","key","id","onClick","window","location","href","frontmatter","path","className","title","date","dangerouslySetInnerHTML","__html","html","postListQuery","blogListTemplate","data","allMarkdownRemark","edges","currentPage","Number","pageContext","numOfPages","previousPage","nextPage","Layout","Style","$export","defined","fails","spaces","space","ltrim","RegExp","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","fn","trim","P","F","string","TYPE","String","replace","global","has","cof","inheritIfRequired","toPrimitive","gOPN","f","gOPD","dP","$trim","$Number","Base","proto","prototype","BROKEN_COF","TRIM","toNumber","argument","it","length","third","radix","maxCode","first","charCodeAt","NaN","code","digits","slice","i","l","parseInt","value","arguments","that","this","valueOf","call","keys","split","j","constructor"],"mappings":"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","file":"component---src-templates-blog-list-template-js-a008bc3b518193417afe.js","sourcesContent":["module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","import React from 'react'\n\nfunction PostList(props) {\n    return (\n        <ul>\n            {props.posts.map(({node}) => (\n                <>\n                <li key={node.id} onClick={() => {window.location.href = node.frontmatter.path}} className=\"blog-post\" >\n                        <h1>{node.frontmatter.title}</h1>\n                        <h2>{node.frontmatter.date}</h2>\n                        <div dangerouslySetInnerHTML={{ __html: node.html }} />\n                </li>\n                <div className=\"separator\">···</div>\n                </>\n            ))}\n        </ul>\n    )\n}\n\nexport default PostList\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from \"../components/Layout\"\nimport PostList from \"../components/PostList\"\nimport SEO from \"../components/seo\"\n\nconst blogListTemplate = (props) =>  {\n    const posts = props.data.allMarkdownRemark.edges\n    const currentPage = Number(props.pageContext.currentPage)\n    const numOfPages = Number(props.pageContext.numOfPages)\n\n    const previousPage = currentPage - 1\n    const nextPage = currentPage + 1\n\n    return (\n        <Layout>\n            <SEO title=\"B\" />\n            <PostList posts={posts} />\n            <div className=\"pagination-bar\">\n    { currentPage > 1 ? (<div> { currentPage != 2 ? <a href={\"/blog/page-\"+previousPage}>{previousPage} &#60;</a> : <a href=\"/blog\">{previousPage} &#60;</a>}</div>) : <div Style=\"padding-right: 1.5em\">·</div>}\n                <div Style=\"font-weight: 600\">{ currentPage }</div>\n                { currentPage < numOfPages ? (<div><a href={\"/blog/page-\"+nextPage}>> {nextPage}</a></div>) : <div Style=\"padding-left: 1.5em\">&zwnj;&zwnj;·</div>}\n            </div>\n        </Layout>\n    )\n}\n\nexport const postListQuery = graphql`\nquery postListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark (\n        sort: { fields: [frontmatter___date], order: DESC}\n        limit: $limit\n        skip: $skip\n    ){\n        edges {\n            node {\n                frontmatter {\n                    title\n                    date(formatString: \"MMMM DD YYYY\")\n                    path\n                }\n                html\n                id\n            }\n        }\n    }\n}\n`\n\nexport default blogListTemplate\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n"],"sourceRoot":""}